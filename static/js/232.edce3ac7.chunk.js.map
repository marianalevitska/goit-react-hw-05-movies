{"version":3,"file":"static/js/232.edce3ac7.chunk.js","mappings":"gRACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAAuG,mB,SC6DvG,MAxDA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,CACrCC,KAAM,GACNC,WAAW,EACXC,MAAO,OAHT,eAAOC,EAAP,KAAgBC,EAAhB,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,2FACvBJ,GAAW,SAAAK,GAAW,yBACjBA,GADiB,IAEpBR,WAAW,EACXC,MAAO,UAJc,mBAQAQ,EAAAA,EAAAA,IAAgBL,GARhB,OAQfM,EARe,OASrBP,GAAW,SAAAK,GAAW,yBACjBA,GADiB,IAEpBR,WAAW,EACXD,MAAK,OAAKW,EAAOX,WAZE,gDAerBI,GAAW,SAAAK,GAAW,yBACjBA,GADiB,IAEpBR,WAAW,EACXC,MAAK,UAlBc,yDAAH,qDAsBtBM,MACC,CAACH,IACJ,IAAQJ,EAA2BE,EAA3BF,UAAWC,EAAgBC,EAAhBD,MAAOF,EAASG,EAATH,KAEpBY,EAAQZ,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACvCC,EAAQD,EAAY,yCACYA,GAClC,uIACJ,OACE,gBAAaE,UAAWC,EAAxB,WACE,eAAID,UAAWC,EAAf,SAA0BJ,KAC1B,gBAAKK,IAAKH,EAAOI,IAAKN,EAAMG,UAAWC,KACvC,eAAID,UAAWC,EAAf,SAA0BN,MAHnBC,MAOPQ,EAAWC,QAAQxB,EAAKyB,OAAS,GACvC,OACE,2BACGF,IAAY,eAAIJ,UAAWC,EAAf,SAA0BR,IACtCX,IAAa,sCACbC,IAAS,uBAAIA,EAAMwB,e,iMCvDpBC,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAgB,mCAAG,sGACLL,EAASM,IAAI,wBADR,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKhBC,EAAY,mCAAG,WAAOC,GAAP,8FAAaC,EAAb,+BAAkB,EAAlB,SACDV,EAASM,IAAI,gBAAiB,CACjDH,OAAQ,CACJQ,SAAU,QACVC,eAAe,EACfF,KAAAA,EACAD,MAAAA,KANgB,uBAChBF,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sDAcZM,EAAe,mCAAG,WAAOzB,GAAP,yFACJY,EAASM,IAAT,iBAAuBlB,IADnB,uBACnBmB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfxB,EAAe,mCAAG,WAAMK,GAAN,yFACLY,EAASM,IAAT,iBAAuBlB,EAAvB,aADK,uBACpBmB,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,sDAKfO,EAAe,mCAAG,WAAM1B,GAAN,yFACLY,EAASM,IAAT,iBAAuBlB,EAAvB,aADK,uBACpBmB,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,uD,+EClCb,SAASQ,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","shared/api/movies.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__bULim\",\"item\":\"cast_item__AMMjV\",\"image\":\"cast_image__tExbg\",\"text\":\"cast_text__E0CXR\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits } from '../../shared/api/movies';\nimport stl from './cast.module.css';\n\nfunction Cast() {\n  const [credits, setCredits] = useState({\n    cast: [],\n    isLoading: false,\n    error: null,\n  });\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchCastDetails = async () => {\n      setCredits(prevCredits => ({\n        ...prevCredits,\n        isLoading: true,\n        error: null,\n      }));\n\n      try {\n        const result = await getMovieCredits(movieId);\n        setCredits(prevCredits => ({\n          ...prevCredits,\n          isLoading: false,\n          cast: [...result.cast],\n        }));\n      } catch (error) {\n        setCredits(prevCredits => ({\n          ...prevCredits,\n          isLoading: false,\n          error,\n        }));\n      }\n    };\n    fetchCastDetails();\n  }, [movieId]);\n  const { isLoading, error, cast } = credits;\n\n  const items = cast.map(({ character, id, name, profile_path }) => {\n    const image = profile_path\n      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n      : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFpNntacA2XFNowRfDYxO1cZOVaeSYe9ozWzpVdxdQ5T41dKiJScEvBOibqiU3KtZvNTk&usqp=CAU';\n    return (\n      <li key={id} className={stl.item}>\n        <h2 className={stl.text}>{name}</h2>\n        <img src={image} alt={name} className={stl.image} />\n        <h3 className={stl.text}>{character}</h3>\n      </li>\n    );\n  });\n  const isRender = Boolean(cast.length > 0);\n  return (\n    <div>\n      {isRender && <ul className={stl.list}>{items}</ul>}\n      {isLoading && <p>...Loading</p>}\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '03d4c920be425f763881cb7707c96958',\n    }\n});\n\nexport const getPopularMovies = async () => {\n    const { data } = await instance.get('/trending/movie/week');\n    return data;\n};\n\nexport const searchMovies = async (query,page=1 ) => {\n    const { data } = await instance.get('/search/movie', {\n        params: {\n            language: 'en-US',\n            include_adult: false,\n            page,\n            query,\n        },\n    });\n    return data;\n};\n\n//https://api.themoviedb.org/3/movie/725201?api_key=03d4c920be425f763881cb7707c96958&language=en-US\n//https://api.themoviedb.org/3/movie/725201?api_key=03d4c920be425f763881cb7707c96958&language=en-US\nexport const getMovieDetails = async (id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n}\n\nexport const getMovieCredits = async id => {\n   const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n}\n\nexport const getMovieReviews = async id => {\n   const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","cast","isLoading","error","credits","setCredits","movieId","useParams","useEffect","fetchCastDetails","prevCredits","getMovieCredits","result","items","map","character","id","name","profile_path","image","className","stl","src","alt","isRender","Boolean","length","message","instance","axios","baseURL","params","api_key","getPopularMovies","get","data","searchMovies","query","page","language","include_adult","getMovieDetails","getMovieReviews","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}