{"version":3,"file":"static/js/326.3061e621.chunk.js","mappings":"gRACA,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,uB,SC6DhH,MAxDA,WACE,OAA4BA,EAAAA,EAAAA,UAAS,CACnCC,MAAO,GACPC,WAAW,EACXC,MAAO,OAHT,eAAOC,EAAP,KAAeC,EAAf,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,2FAC1BJ,GAAU,SAAAK,GAAU,yBACfA,GADe,IAElBR,WAAW,EACXC,MAAO,UAJiB,mBAQHQ,EAAAA,EAAAA,IAAgBL,GARb,OAQlBM,EARkB,OASxBP,GAAU,SAAAK,GAAU,yBACfA,GADe,IAElBR,WAAW,EACXD,OAAM,OAAKW,EAAOC,cAZI,gDAexBR,GAAU,SAAAK,GAAU,yBACfA,GADe,IAElBR,WAAW,EACXC,MAAK,UAlBiB,yDAAH,qDAsBzBM,MACC,CAACH,IACJ,IAAQJ,EAA4BE,EAA5BF,UAAWC,EAAiBC,EAAjBD,MAAOF,EAAUG,EAAVH,MAEpBa,EAAQb,EAAMc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,OACtC,OACE,gBAAaC,UAAWC,EAAAA,KAAxB,WACE,eAAID,UAAWC,EAAAA,MAAf,SAA2BF,KAE3B,cAAGC,UAAWC,EAAAA,KAAd,SAAyBJ,MAHlBC,MAOPI,EAAWC,QAAQrB,EAAMsB,OAAS,GACxC,OACE,iCACIF,IACA,cAAGF,UAAWC,EAAAA,QAAd,6CAEDC,IAAY,gBAAIF,UAAWC,EAAAA,KAAf,cAA2BN,KACvCZ,IAAa,sCACbC,IAAS,uBAAIA,EAAMqB,e,iMCvDpBC,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAgB,mCAAG,sGACLL,EAASM,IAAI,wBADR,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKhBC,EAAY,mCAAG,WAAOC,GAAP,8FAAaC,EAAb,+BAAkB,EAAlB,SACDV,EAASM,IAAI,gBAAiB,CACjDH,OAAQ,CACJQ,SAAU,QACVC,eAAe,EACfF,KAAAA,EACAD,MAAAA,KANgB,uBAChBF,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sDAcZM,EAAe,mCAAG,WAAOrB,GAAP,yFACJQ,EAASM,IAAT,iBAAuBd,IADnB,uBACnBe,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfO,EAAe,mCAAG,WAAMtB,GAAN,yFACLQ,EAASM,IAAT,iBAAuBd,EAAvB,aADK,uBACpBe,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,sDAKfrB,EAAe,mCAAG,WAAMM,GAAN,yFACLQ,EAASM,IAAT,iBAAuBd,EAAvB,aADK,uBACpBe,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,uD,+EClCb,SAASQ,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx","shared/api/movies.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__BCK8P\",\"item\":\"reviews_item__boRvd\",\"title\":\"reviews_title__nRRiP\",\"text\":\"reviews_text__e7pNt\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../../shared/api/movies';\nimport stl from './reviews.module.css';\n\nfunction Reviews() {\n  const [review, setReview] = useState({\n    items: [],\n    isLoading: false,\n    error: null,\n  });\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchReviewsDetails = async () => {\n      setReview(prevReview => ({\n        ...prevReview,\n        isLoading: true,\n        error: null,\n      }));\n\n      try {\n        const result = await getMovieReviews(movieId);\n        setReview(prevReview => ({\n          ...prevReview,\n          isLoading: false,\n          items: [...result.results],\n        }));\n      } catch (error) {\n        setReview(prevReview => ({\n          ...prevReview,\n          isLoading: false,\n          error,\n        }));\n      }\n    };\n    fetchReviewsDetails();\n  }, [movieId]);\n  const { isLoading, error, items } = review;\n\n  const lines = items.map(({ content, id, author }) => {\n    return (\n      <li key={id} className={stl.item}>\n        <h2 className={stl.title}>{author}</h2>\n\n        <p className={stl.text}>{content}</p>\n      </li>\n    );\n  });\n  const isRender = Boolean(items.length > 0);\n  return (\n    <>\n      {!isRender && (\n        <p className={stl.comment}>We haven't had any comments yet</p>\n      )}\n      {isRender && <ul className={stl.list}> {lines}</ul>}\n      {isLoading && <p>...Loading</p>}\n      {error && <p>{error.message}</p>}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '03d4c920be425f763881cb7707c96958',\n    }\n});\n\nexport const getPopularMovies = async () => {\n    const { data } = await instance.get('/trending/movie/week');\n    return data;\n};\n\nexport const searchMovies = async (query,page=1 ) => {\n    const { data } = await instance.get('/search/movie', {\n        params: {\n            language: 'en-US',\n            include_adult: false,\n            page,\n            query,\n        },\n    });\n    return data;\n};\n\n//https://api.themoviedb.org/3/movie/725201?api_key=03d4c920be425f763881cb7707c96958&language=en-US\n//https://api.themoviedb.org/3/movie/725201?api_key=03d4c920be425f763881cb7707c96958&language=en-US\nexport const getMovieDetails = async (id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n}\n\nexport const getMovieCredits = async id => {\n   const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n}\n\nexport const getMovieReviews = async id => {\n   const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","items","isLoading","error","review","setReview","movieId","useParams","useEffect","fetchReviewsDetails","prevReview","getMovieReviews","result","results","lines","map","content","id","author","className","stl","isRender","Boolean","length","message","instance","axios","baseURL","params","api_key","getPopularMovies","get","data","searchMovies","query","page","language","include_adult","getMovieDetails","getMovieCredits","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}